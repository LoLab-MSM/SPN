
from pysb import *

Model()

Monomer('A', ['state'], {'state': ['0', '1']})
Monomer('B', ['state'], {'state': ['0', '1']})
Monomer('C', ['state'], {'state': ['0', '1']})
Monomer('D', ['state'], {'state': ['0', '1']})

Initial(A(state = '0'), Parameter('A0_init', 1))
Initial(A(state = '1'), Parameter('A1_init', 0))
Initial(B(state = '0'), Parameter('B0_init', 1))
Initial(B(state = '1'), Parameter('B1_init', 0))
Initial(C(state = '0'), Parameter('C0_init', 1))
Initial(C(state = '1'), Parameter('C1_init', 0))
Initial(D(state = '0'), Parameter('D0_init', 0))
Initial(D(state = '1'), Parameter('D1_init', 1))

Observable('A0_obs', A(state = '0'))
Observable('A1_obs', A(state = '1'))
Observable('B0_obs', B(state = '0'))
Observable('B1_obs', B(state = '1'))
Observable('C0_obs', C(state = '0'))
Observable('C1_obs', C(state = '1'))
Observable('D0_obs', D(state = '0'))
Observable('D1_obs', D(state = '1'))

Rule('A1', A(state = 'True') + C(state = 'True') + B(state = 'True') >> A(state = 'False') + C(state = 'True') + B(state = 'True'), on)
Rule('A2', A(state = 'False') + C(state = 'True') + B(state = 'False') >> A(state = 'True') + C(state = 'True') + B(state = 'False'), on)
Rule('A3', A(state = 'True') + C(state = 'False') >> A(state = 'False') + C(state = 'False'), on)

Rule('C1', C(state = 'False') + D(state = 'True') >> C(state = 'True') + D(state = 'True'), on)
Rule('C2', C(state = 'True') + D(state = 'False') >> C(state = 'False') + D(state = 'False'), on)

Rule('B1', B(state = 'False') + A(state = 'True') >> B(state = 'True') + A(state = 'True'), on)
Rule('B2', B(state = 'True') + A(state = 'False') >> B(state = 'False') + A(state = 'False'), on)

Rule('D1', D(state = 'False') + B(state = 'True') >> D(state = 'True') + B(state = 'True'), on)
Rule('D2', D(state = 'True') + B(state = 'False') >> D(state = 'False') + B(state = 'False'), on)

